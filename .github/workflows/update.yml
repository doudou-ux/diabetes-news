name: Update Diabetes News Daily

on:
  schedule:
    # 每天的 UTC 时间 16:00 运行 (对应北京时间 00:00)
    # 您可以根据需要调整时间，格式是 cron 格式
    - cron: '0 16 * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  build-and-deploy: # 您之前的 job 名是 build，这里可以保持一致或修改
    runs-on: ubuntu-latest
    permissions:
      contents: write # 非常重要：允许 action 将更改写回仓库

    steps:
      - name: Checkout repository # 步骤1：签出您的代码
        uses: actions/checkout@v4 # 建议使用较新版本

      - name: Set up Python # 步骤2：设置 Python 环境
        uses: actions/setup-python@v5 # 建议使用较新版本
        with:
          python-version: '3.10' # 指定一个明确的 Python 版本

      - name: Install dependencies (if any for real API) # 步骤3：安装依赖
        run: |
          python -m pip install --upgrade pip
          # 如果您将来使用真实API，可能会用到 requests, beautifulsoup4 等
          # pip install requests beautifulsoup4
          # 当前的模拟脚本不需要额外依赖

      - name: Run news fetch script to generate HTML # 步骤4：运行 Python 脚本
        run: python fetch_news.py # 确保这里的脚本名与您的 Python 文件名一致
        env:
          # 如果您将来使用API密钥，可以在GitHub Secrets中设置，并在这里传递给脚本
          # NEWS_API_KEY: ${{ secrets.YOUR_NEWS_API_KEY_SECRET_NAME }}
          APP_TIMEZONE: Asia/Shanghai # 设置时区环境变量，让Python脚本可以生成正确的本地时间

      - name: Commit and push index.html # 步骤5：提交并推送更改
        run: |
          git config --global user.name 'github-actions[bot]' # 配置 git 用户名
          git config --global user.email 'github-actions[bot]@users.noreply.github.com' # 配置 git 邮箱
          git add index.html # 只添加明确更改的 index.html 文件
          # 检查是否有实际更改，只有在有更改时才提交
          if ! git diff --staged --quiet; then
            git commit -m "自动化更新：每日糖尿病资讯 $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
            git push
          else
            echo "No changes to index.html to commit."
          fi
